apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: wildcard.sales.dc70k8s-apps.sf.priv
spec:
  externalSecretName:  wildcard.sales.dc70k8s-apps.sf.priv
  externalSecretSpec:
    data:
     - secretKey: tls.crt
       remoteRef:
         key: dc70-sales-argocd_repo_secrets/data/tls.certificates
         property: sales.crt
     - secretKey: tls.key
       remoteRef:
         key: dc70-sales-argocd_repo_secrets/data/tls.certificates
         property: sales.key
    secretStoreRef:
      kind: ClusterSecretStore
      name: vault-backend-cluster
    refreshInterval: "0"
    target:
      creationPolicy: Orphan
      name: wildcard.sales.dc70k8s-apps.sf.priv
     # this is how the Kind=Secret will look like
      template:
        type: kubernetes.io/tls
  namespaceSelector:
    matchLabels:
      external-secrets.app.succesfactors.com/env: sales
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: wildcard.devdemo.dc70k8s-apps.sf.priv
spec:
  externalSecretName:  wildcard.devdemo.dc70k8s-apps.sf.priv
  externalSecretSpec:
    data:
     - secretKey: tls.crt
       remoteRef:
         key: dc70-sales-argocd_repo_secrets/data/tls.certificates
         property: devdemo.crt
     - secretKey: tls.key
       remoteRef:
         key: dc70-sales-argocd_repo_secrets/data/tls.certificates
         property: devdemo.key
    secretStoreRef:
      kind: ClusterSecretStore
      name: vault-backend-cluster
    refreshInterval: "0"
    target:
      creationPolicy: Orphan
      name: wildcard.devdemo.dc70k8s-apps.sf.priv
     # this is how the Kind=Secret will look like
      template:
        type: kubernetes.io/tls
  namespaceSelector:
    matchLabels:
      external-secrets.app.succesfactors.com/env: devdemo 
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: wildcard.devshow.dc70k8s-apps.sf.priv
spec:
  externalSecretName:  wildcard.devshow.dc70k8s-apps.sf.priv
  externalSecretSpec:
    data:
     - secretKey: tls.crt
       remoteRef:
         key: dc70-sales-argocd_repo_secrets/data/tls.certificates
         property: devshow.crt
     - secretKey: tls.key
       remoteRef:
         key: dc70-sales-argocd_repo_secrets/data/tls.certificates
         property: devshow.key
    secretStoreRef:
      kind: ClusterSecretStore
      name: vault-backend-cluster
    refreshInterval: "0"
    target:
      creationPolicy: Orphan
      name: wildcard.devshow.dc70k8s-apps.sf.priv
     # this is how the Kind=Secret will look like
      template:
        type: kubernetes.io/tls
  namespaceSelector:
    matchLabels:
      external-secrets.app.succesfactors.com/env: devshow
---